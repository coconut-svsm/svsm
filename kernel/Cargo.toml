[package]
name = "svsm"
version = "0.1.0"
edition = "2021"
rust-version = "1.86.0"

[[bin]]
name = "stage2"
path = "src/stage2.rs"
test = false

[[bin]]
name = "svsm"
path = "src/svsm.rs"
test = false

[lib]
test = true
doctest = true

[dependencies]
bootlib.workspace = true
cpuarch.workspace = true
libaproxy = { workspace = true, optional = true }
elf.workspace = true
syscall.workspace = true

aes = { workspace = true, optional = true }
aes-gcm = { workspace = true, features = ["aes", "alloc"] }
base64 = { workspace = true, optional = true, features = ["alloc"] }
bitfield-struct.workspace = true
bitflags.workspace = true
cocoon-tpm-crypto = { workspace = true, features = [
    "enable_arch_math_asm", "zeroize",
    # Enable x86 rdseed based rng.
    "enable_x86_64_rdseed",
    # At least one of block cipher, mode and hash is needed,
    # otherwise compilation will fail due to empty enums.
    "aes", "cfb", "sha256", "sha384", "sha512",
    "ecc", "ecdh", "ecdsa",
    "ecc_nist_p224", "ecc_nist_p256",
    "ecc_nist_p384", "ecc_nist_p521",
], optional = true }
cocoon-tpm-tpm2-interface = { workspace = true, optional = true }
cocoon-tpm-utils-common = { workspace = true, optional = true }
gdbstub = { workspace = true, optional = true }
gdbstub_arch = { workspace = true, optional = true }
igvm_defs = { workspace = true, features = ["unstable"] }
intrusive-collections.workspace = true
kbs-types = { workspace = true, optional = true, features = ["alloc"] }
log = { workspace = true, features = ["max_level_info", "release_max_level_info"] }
packit.workspace = true
libtcgtpm = { workspace = true, optional = true }
serde = { workspace = true, optional = true, features = ["alloc", "derive"] }
serde_json = { workspace = true, optional = true, features = ["alloc"] }
zerocopy = { workspace = true, features = ["alloc", "derive"] }
release.workspace = true
# Need "force-soft", see https://github.com/RustCrypto/hashes/issues/446
sha2 = { workspace = true, features = ["force-soft"] }
uuid.workspace = true
virtio-drivers = { workspace = true, optional = true }

builtin = { workspace = true, optional = true }
builtin_macros = { workspace = true, optional = true }
vstd = { workspace = true, optional = true}
verify_proof = { workspace = true, optional = true}
verify_external = { workspace = true, optional = true}
verus_stub = { workspace = true }
rlebits = { version = "0.1.0", path = "../rlebits" }

[target."x86_64-unknown-none".dev-dependencies]
test.workspace = true

[features]
attest = ["dep:aes", "dep:base64", "dep:cocoon-tpm-crypto", "dep:cocoon-tpm-tpm2-interface", "dep:cocoon-tpm-utils-common", "dep:kbs-types", "dep:libaproxy", "dep:serde", "dep:serde_json"]

default = []
enable-gdb = ["dep:gdbstub", "dep:gdbstub_arch"]
vtpm = ["dep:libtcgtpm"]
nosmep = []
nosmap = []
verus_all = ["builtin", "builtin_macros", "vstd", "verify_proof/verus", "verify_external/verus", "verus_stub/disable"]
verus = ["verus_all", "verify_proof/noverify", "verify_external/noverify"]
noverify = []
virtio-drivers = ["dep:virtio-drivers"]

[dev-dependencies]
sha2 = { workspace = true, features = ["force-soft"] }

[build-dependencies]
rustc_version = "0.4"

[lints]
workspace = true
